<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Simba 的喵窩</title><link>https://blog.simbafs.cc/categories/docker/</link><description>Recent content in docker on Simba 的喵窩</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.simbafs.cc/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>docker login error</title><link>https://blog.simbafs.cc/p/linux/docker/docker-login-error/</link><pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/docker/docker-login-error/</guid><description>&lt;h1 id="docker-login-error">Docker Login Error&lt;/h1>
&lt;h2 id="錯誤說明">錯誤說明&lt;/h2>
&lt;p>昨天我在 terminal 登入 docker 的時候發現不知道為什麼不能登入，我先透過網頁登入確認過密碼沒有問題，也不是打錯字的關係，但還是不能當入。總是會有類似以下的錯誤訊息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Error saving credentials: error storing credentials - err: exit status 1, out: `exit status 1: gpg: simbafs: 已跳過: 沒有公鑰
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg: [stdin]: encryption failed: 沒有公鑰
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password encryption aborted.`
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="解決方法">解決方法&lt;/h2>
&lt;p>經過搜尋之後，我按照 &lt;a class="link" href="https://github.com/docker/docker-credential-helpers/issues/102#issuecomment-388634452" target="_blank" rel="noopener"
>https://github.com/docker/docker-credential-helpers/issues/102#issuecomment-388634452&lt;/a> 的方法成功登入了，但是在這之前要先安裝 &lt;code>gpg&lt;/code> 和 &lt;code>pass&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install gnupg2 pass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下來是我用的指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install gnupg2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/docker/docker-credential-helpers/releases/download/v0.6.3/docker-credential-pass-v0.6.3-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xvf docker-credential-pass-v0.6.3-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">755&lt;/span> docker-credential-pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo mv docker-credential-pass /usr/bin/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ass insert docker-credential-helpers/docker-pass-initialized-check
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pass insert docker-credential-helpers/docker-pass-initialized-check
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pass show docker-credential-helpers/docker-pass-initialized-check
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker-credential-pass list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="參考連結">參考連結&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/docker/docker-credential-helpers/issues/102#issuecomment-388634452" target="_blank" rel="noopener"
>https://github.com/docker/docker-credential-helpers/issues/102#issuecomment-388634452&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://stackoverflow.com/questions/50151833/cannot-login-to-docker-account/52881198#52881198" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/50151833/cannot-login-to-docker-account/52881198#52881198&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gist.github.com/dataday/3c267be29e32573829c4781c99ea3395" target="_blank" rel="noopener"
>https://gist.github.com/dataday/3c267be29e32573829c4781c99ea3395&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Connect to Ethernet in Docker Container</title><link>https://blog.simbafs.cc/p/linux/docker/connect-to-ethernet-in-docker-container/</link><pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/docker/connect-to-ethernet-in-docker-container/</guid><description>&lt;h1 id="connect-to-ethernet-in-docker-container">Connect to Ethernet in Docker Container&lt;/h1>
&lt;h2 id="如何在-docker-container-裡連接-ethernet">如何在 docker container 裡連接 ethernet&lt;/h2>
&lt;p>今天突然有個需求是在一個已經開啟的 container 弄東西，需要網路，但是不知道為什麼一直不上，後來發現是 docker 沒有設定 DNS 的問題，只要在外面輸入兩行指令就可以了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DOCKER_OPTS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;--dns 8.8.8.8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然後重新啟動 docker&lt;/p></description></item><item><title>docker commit</title><link>https://blog.simbafs.cc/p/linux/docker/docker-commit/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/docker/docker-commit/</guid><description>&lt;h1 id="docker-commit">Docker Commit&lt;/h1>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>上次提到可以用 Dockerfile 建立 docker image，但我們還有令一個方法可以建立 docker image，那就是 &lt;code>docker commit&lt;/code> 指令&lt;/p>
&lt;h3 id="和-dockerfile-差別">和 Dockerfile 差別&lt;/h3>
&lt;p>&lt;code>docker commit&lt;/code> 有點像是手動版的 Dockerfile，在用 Dockerfile 建構 docker image 的時候，docker build 的工作就像是自動根據 Dockerfile 操作 &lt;code>docker commit&lt;/code>。
Dockerfile 比較適合用在自動化交付和部屬，例如說你有一份程式碼，要將他包成 Docker 就很適合用 Dockerfile 自動化操作，因為程式碼會改變，但是包裝的流程基本上都是一樣的。
&lt;code>docker commit&lt;/code> 適合用在建構環境，因為會有比較麻煩的操作，如果寫成 Dockerfile 會比較麻煩，當然如果可以的話還是寫成 Dockerfile 會比較好，因為更新的時候會比較方便。
在建構 image 的時候要用哪個方法就看個人取捨了。&lt;/p>
&lt;h3 id="docker-commit-指令">&lt;code>docker commit&lt;/code> 指令&lt;/h3>
&lt;p>&lt;code>docker commit&lt;/code> 可以把運行中的 comtainer 轉成 images，有點類似令存新檔的概念。先來看看參數吧！&lt;/p>
&lt;h4 id="參數">參數&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ docker commit --help
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Usage: docker commit &lt;span class="o">[&lt;/span>OPTIONS&lt;span class="o">]&lt;/span> CONTAINER &lt;span class="o">[&lt;/span>REPOSITORY&lt;span class="o">[&lt;/span>:TAG&lt;span class="o">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Create a new image from a container&lt;span class="err">&amp;#39;&lt;/span>s changes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Options:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -a, --author string Author &lt;span class="o">(&lt;/span>e.g., &lt;span class="s2">&amp;#34;John Hannibal Smith &amp;lt;hannibal@a-team.com&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -c, --change list Apply Dockerfile instruction to the created image
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -m, --message string Commit message
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -p, --pause Pause container during commit &lt;span class="o">(&lt;/span>default &lt;span class="nb">true&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">選項&lt;/th>
&lt;th style="text-align:left">說明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">-a&lt;/td>
&lt;td style="text-align:left">作者的名字&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">-c&lt;/td>
&lt;td style="text-align:left">我還沒研究出來有什麼用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">-m&lt;/td>
&lt;td style="text-align:left">訊息&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">-p&lt;/td>
&lt;td style="text-align:left">建構時停容器&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docker 基礎指令</title><link>https://blog.simbafs.cc/p/linux/docker/docker-command/</link><pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/docker/docker-command/</guid><description>&lt;h1 id="docker-指令">Docker 指令&lt;/h1>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt install docker docker.io docker-compose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="what-is-docker">What is docker&lt;/h2>
&lt;p>Docker 是一個容器化的技術，基本上使用的時候可以把他當成虛擬機，雖然他們的使用的技術完全不一樣。對新手來說，在 Docker 裡面有四個重要的名詞：dockerfile, docker image, docker container, docker-compose。&lt;/p>
&lt;ol>
&lt;li>dockerfile&lt;br>
純文字檔，定義建立 docker image 的步驟，有點像是一個 bash shell。通常命名成 &lt;code>Dockerfile&lt;/code> ，在 build 的時候會預設用這個，也可以用 &lt;code>-f&lt;/code> 來指定其他的檔案。&lt;/li>
&lt;li>docker image&lt;br>
這是透過 &lt;code>docker build&lt;/code> 編譯出來的東西。可以想成 docker container 的藍圖，在 &lt;code>docker pull&lt;/code> 的時候也是下載 docker image 而不是 dockerfile。基本上 image 裡面已經包括了編譯好的執行檔和基本的環境設定，所以在 docker 外面是不用做他設定的，這也是 docker 的魅力所在。&lt;/li>
&lt;li>docker container&lt;br>
每個 docker image 可以產生很多個 container，也就是執行中的程式。在這裡你已經可以用 docker 來建立各種服務了。這裡也可以想像成虛擬機，用 &lt;code>docker exec -it container_name bash&lt;/code> 可以進到 container 裡面(如果裡面有 bash 的話)&lt;/li>
&lt;li>docker-compose&lt;br>
一個服務不是一個 container 就可以架起來的，通常需要好幾個 container。這時候如果透過指令啟動也許會有忘記啟動和設定複雜的問題，所以有了這個工具。他透過 yml 設定來啟動服務。值得注意的是在同一個 &lt;code>docker-compose.yml&lt;/code> 啟動的 container 會在同一個網路內而和外面隔開，所以如果是 containers 之間的通訊不用把 port 暴露出來，只有開給外面的要 expose。&lt;/li>
&lt;/ol></description></item></channel></rss>