<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Simba 的喵窩</title><link>https://blog.simbafs.cc/post/linux/</link><description>Recent content in linux on Simba 的喵窩</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Feb 2023 16:59:29 +0800</lastBuildDate><atom:link href="https://blog.simbafs.cc/post/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Snippet</title><link>https://blog.simbafs.cc/p/git-snippet/</link><pubDate>Mon, 20 Feb 2023 16:59:29 +0800</pubDate><guid>https://blog.simbafs.cc/p/git-snippet/</guid><description>&lt;h1 id="git-snippet">Git Snippet&lt;/h1>
&lt;h2 id="move-branch-to-another-commit-not-recommand">move branch to another commit (not recommand)&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> git branch --force &amp;lt;branch name&amp;gt; &amp;lt;commit id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="list-changed-filename">list changed filename&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> git diff --name-only HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/1552340/how-to-list-only-the-names-of-files-that-changed-between-two-commits" target="_blank" rel="noopener"
>ref: stackoverflow&lt;/a>&lt;/p></description></item><item><title>GPG With SSH</title><link>https://blog.simbafs.cc/p/gpg-with-ssh/</link><pubDate>Tue, 06 Dec 2022 22:59:17 +0800</pubDate><guid>https://blog.simbafs.cc/p/gpg-with-ssh/</guid><description>&lt;p>接續前一篇 &lt;a class="link" href="https://blog.simbafs.cc/posts/linux/gpg/" >gpg 的文章&lt;/a>&lt;/p>
&lt;h1 id="指紋-fingerprint">指紋 Fingerprint&lt;/h1>
&lt;p>根據 &lt;a class="link" href="https://help.gnome.org/users/seahorse/stable/misc-key-fingerprint.html.en" target="_blank" rel="noopener"
>GNOME help&lt;/a> 的說明，不同金鑰的指紋必然不同，因此如果要驗證、查詢的話，與其用其他參數，不如用指紋，例如我的 GPG key 指紋是 &lt;code>6236 A070 8FCD 894C 7AD1 A5FC DB13 A5C2 042E AEA4&lt;/code>，看到這串就代表是我。&lt;/p>
&lt;h1 id="grip">Grip&lt;/h1>
&lt;p>根據 &lt;a class="link" href="https://lists.gnupg.org/pipermail/gcrypt-devel/2013-June/002205.html" target="_blank" rel="noopener"
>gnupg 的這封郵件&lt;/a>，grip 似乎是金鑰參數的 SHA-1 hash，看不太懂哪些參數會被納入計算。&lt;/p>
&lt;h1 id="ssh-authorize-with-gpg">ssh authorize with gpg&lt;/h1>
&lt;p>以下步驟來自下面三個參考網址&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.theerrorlog.com/using-gpg-zh.html" target="_blank" rel="noopener"
>https://blog.theerrorlog.com/using-gpg-zh.html&lt;/a> (這裡有一些關於 gpg 的設定操做，不一定要像他說的那樣主密鑰分離，只是給一個操作說明)&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.theerrorlog.com/using-gpg-keys-for-ssh-authentication-zh.html" target="_blank" rel="noopener"
>https://blog.theerrorlog.com/using-gpg-keys-for-ssh-authentication-zh.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://gist.github.com/mcattarinussi/834fc4b641ff4572018d0c665e5a94d3" target="_blank" rel="noopener"
>https://gist.github.com/mcattarinussi/834fc4b641ff4572018d0c665e5a94d3&lt;/a> (gpg-agent 設定看這篇，這前面有非常詳細的 gpg ket 設定教學)&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>根據第二個參考資料的說明產生可以用於 ssh 驗證的 gpg subkey（有&lt;code>[A]&lt;/code>）&lt;/li>
&lt;li>取得 ssh 格式的公鑰 &lt;code>gpg2 --export-ssh-key you@example.com&lt;/code>&lt;/li>
&lt;li>取得要用於驗證的 subkey 的 keygrip&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ gpg2 --list-keys --with-keygrip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/home/you/.gnupg/pubring.kbx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pub rsa4096 2022-12-06 [C]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Keygrip = BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">uid [ultimate] you &amp;lt;you@example.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub rsa4096 2022-12-06 [S]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Keygrip = CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub rsa4096 2022-12-06 [E]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Keygrip = DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub ed25519 2022-12-06 [A] &amp;lt;- 可用於驗證的子金鑰
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Keygrip = EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE &amp;lt;- 我們要的 keygrip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>將 keygrip 寫入 &lt;code>.gnupg/sshcontrol&lt;/code> -&amp;gt; &lt;code>echo EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE &amp;gt;&amp;gt; .gnupg/sshcontrol&lt;/code>&lt;/li>
&lt;li>根據第三個參考網址 &lt;a class="link" href="https://gist.github.com/mcattarinussi/834fc4b641ff4572018d0c665e5a94d3#setup-the-gpg-agent-for-ssh-authentication" target="_blank" rel="noopener"
>setup-the-gpg-agent-for-ssh-authentication&lt;/a> 章節設定 gpg-agent&lt;/li>
&lt;/ol>
&lt;p>這時後重新開啟終端機就可以用 gpg 取代原本的 ssh key 了，確認移除 ssh key 真的還可以登入後就可以把舊的 ssh key 收起來了。&lt;/p></description></item><item><title>Yubikey</title><link>https://blog.simbafs.cc/p/yubikey/</link><pubDate>Tue, 19 Apr 2022 15:22:55 +0800</pubDate><guid>https://blog.simbafs.cc/p/yubikey/</guid><description>&lt;p>感謝煥杰賣我一個 1200，撿到寶啦！我買的是 &lt;a class="link" href="https://www.yubico.com/tw/product/yubikey-5c-nfc/" target="_blank" rel="noopener"
>Yubikey 5C NFC&lt;/a>，看起來幾乎所有功能都有&lt;/p>
&lt;h1 id="login">login&lt;/h1>
&lt;p>如果開啟這個，登入、解除鎖定等等動作都需要 Yubikey，聽起還很安全，但是因為我的筆電只有一個 type C，所以必須把 USB hub 拔掉，挺麻煩，我就把他關掉了。&lt;br>
在密碼輸入框的地方，先插入 yubikey，輸入密碼、按 enter，然後轉圈圈的時候按 yubikey 上金色按鈕（這個似乎是指紋辨識），就可以登入了。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://oscfr.com/blog/tech/yubico-yubikey-5c-nfc-setup-on-ubuntu-2104/" target="_blank" rel="noopener"
>Yubico Yubikey 5C NFC setup on Ubuntu 21.04&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="ssh-gpg">ssh gpg&lt;/h1>
&lt;p>&lt;del>研究中&amp;hellip;&lt;/del>
在這裡 &lt;a class="link" href="https://blog.simbafs.cc/posts/linux/gpg-with-ssh" >GPG with SSH&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://medium.com/@SSWilsonKao/%E5%A6%82%E4%BD%95%E5%9C%A8-mac-%E4%B8%8A-%E6%8A%8A-yubikey-%E8%88%87-gpg-ssh-%E6%90%AD%E9%85%8D%E5%9C%A8%E4%B8%80%E8%B5%B7-5f842d20ad6a" target="_blank" rel="noopener"
>如何在 Mac 上，把 YubiKey 與 GPG、SSH 搭配在一起&lt;/a> &amp;gt; &lt;a class="link" href="https://gist.github.com/artizirk/d09ce3570021b0f65469cb450bee5e29" target="_blank" rel="noopener"
>OpenPGP SSH access with Yubikey and GnuPG&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="2fa">2FA&lt;/h1>
&lt;p>按照各個網站的說明設定，下面是我找到可以設定 Yubikey 的網站/APP&lt;/p>
&lt;ul>
&lt;li>Google（我買這個 yubikey 最主要目的）&lt;/li>
&lt;li>Github&lt;/li>
&lt;li>twitter&lt;/li>
&lt;li>facebook&lt;/li>
&lt;li>heroku&lt;/li>
&lt;/ul>
&lt;p>twitter 在手機登入好像怪怪的，試了 5 分鐘才成功登入了&lt;/p>
&lt;hr>
&lt;h1 id="20221207-更">2022/12/07 更&lt;/h1>
&lt;p>過了一陣子，系統也重裝過，然後 yubikey 就讀不到了，但是平常用網站都可以，只是 CLI 和 Yubikey personalization tool 都讀不到。
插上後輸入以下指令都會失敗&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ ykpersonalize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Yubikey core error: no yubikey present
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ykman list --serials
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WARNING: PC/SC not available. Smart card (CCID) protocols will not function.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ERROR: Unable to list devices for connection
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">15421961
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是用 &lt;code>lsusb&lt;/code> 看起來卻很正常&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ lsusb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Bus 001 Device 010: ID 1050:0406 Yubico.com Yubikey 4/5 U2F+CCID
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>目前根據 &lt;a class="link" href="https://github.com/Yubico/yubioath-flutter/issues/786#issuecomment-1063656957" target="_blank" rel="noopener"
>這個 GitHub Issue 的回覆&lt;/a>，輸入 &lt;code>sudo systemctl start pcscd&lt;/code> 後，變成這樣&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ ykman list --serials
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">15421961
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我剛剛發現，輸入指令 &lt;code>ykman info&lt;/code> (yubikey manager) 竟然有回應，也找得到&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ ykman info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device type: YubiKey 5C NFC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Serial number: 15421961
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Firmware version: 5.2.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Form factor: Keychain (USB-C)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enabled USB interfaces: FIDO, CCID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NFC transport is enabled.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Applications USB NFC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OTP Disabled Enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">FIDO U2F Enabled Enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">FIDO2 Enabled Enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OATH Enabled Enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PIV Enabled Enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OpenPGP Enabled Enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">YubiHSM Auth Not available Not available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是 ykpersonalize 還是找不到我的 yubikey，後來我直接跳過這步，說不定現在 gpg 已經可以讀到了，所以我直接執行 &lt;code>gpg --edit-card&lt;/code>，結果他說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">gpg: error getting version from &amp;#39;scdaemon&amp;#39;: No SmartCard daemon
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg: OpenPGP card not available: No SmartCard daemon
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>根據 &lt;a class="link" href="https://www.reddit.com/r/yubikey/comments/lbl4nn/having_some_trouble_with_gpg_and_yubikey/" target="_blank" rel="noopener"
>這篇 reddit&lt;/a>，是少了套件 &lt;code>scdaemon&lt;/code>，用 apt 裝了之後 gpg 的回應看起來就正常多了&lt;/p>
&lt;p>然後就跟著 [官方 blog 的說明](&lt;a class="link" href="https://support.yubico.com/hc/en-us/articles/360013790259-Using-Your-YubiKey-with-OpenPGP#Generating_Keys_externally_from_the_YubiKey_%28Recommended%29ui6vup%29" target="_blank" rel="noopener"
>https://support.yubico.com/hc/en-us/articles/360013790259-Using-Your-YubiKey-with-OpenPGP#Generating_Keys_externally_from_the_YubiKey_(Recommended%29ui6vup)&lt;/a> 把主密鑰（？好像是簽章用子密鑰）移到 yubikey 上了&lt;/p>
&lt;p>接下來我亂七八糟試了一堆東西，發現 &lt;a class="link" href="https://developer.okta.com/blog/2021/07/07/developers-guide-to-gpg" target="_blank" rel="noopener"
>一篇文章&lt;/a> 把上面的東西幾乎都包括進去了，非常推薦可以去看看。&lt;/p>
&lt;p>剛剛搞了一陣後，把簽章、加密、驗證和主金鑰（應該有）的密鑰通通丟上 yubikey 了。但是現在有個問題，所有需要 gpg key 的時候，像是簽 git commit 和 ssh 驗證都需要插上 yubikey，好像安全過頭了。我研究看看能不能把某些再拉回本地，如果不行的話就只能把一開始備份的密鑰再導入一次，暴力解決！&lt;/p>
&lt;h1 id="密碼們">密碼們&lt;/h1>
&lt;p>yubikey 的設定中有好幾份不同功能的密碼，用法和出現時機都不一樣，這邊是我研究好幾份文件的總整理。首先要先有個關念，yubikey 的設計是公司裡有個人專門管一大堆的 yubikey，所以會有一個密碼是只有管理人知道，使用者不知道。那為了驗證是使用者本人，也會有密碼是只有使用者知道但是其他人不知道。&lt;/p>
&lt;h2 id="pin">PIN&lt;/h2>
&lt;p>這個 &amp;ldquo;PIN&amp;rdquo; 是 &lt;strong>&amp;ldquo;Personal Identification Number&amp;rdquo;&lt;/strong> 的縮寫，顧名思義，這個就是只有使用者知道但是其他人不知道的 PIN，你會在動用 gpg、ssh 密鑰時用到他。預設是 123456&lt;/p>
&lt;h3 id="使用情境">使用情境&lt;/h3>
&lt;ul>
&lt;li>驗證 PIN&lt;/li>
&lt;li>改變 PIN&lt;/li>
&lt;li>改變嘗試次數限制（還需要 management key）&lt;/li>
&lt;li>簽章&lt;/li>
&lt;li>解密&lt;/li>
&lt;li>key agreement&lt;/li>
&lt;li>取得資料&lt;/li>
&lt;/ul>
&lt;h2 id="puk">PUK&lt;/h2>
&lt;p>&amp;ldquo;PUK&amp;rdquo; 是 &amp;ldquo;PIN Unblocking Key&amp;rdquo; 的縮寫，他的功能是當你輸入錯誤的 PIN 太多次時，用這個密碼解鎖。如果很不幸的你 PUK 也輸入錯誤太多次，整個 yubikey 會被鎖起來，所有的功能都不能用，根據 &lt;a class="link" href="https://support.yubico.com/hc/en-us/articles/360015654100-YubiKey-PIN-and-PUK-User-Management-on-Windows" target="_blank" rel="noopener"
>官方文件&lt;/a>，你只能回復出廠設定&lt;/p>
&lt;blockquote>
&lt;p>By default, the user PIN is blocked when three consecutive incorrect PINs have been entered. The PIN Unblock Code (PUK) is used for unblocking the User PIN. If both the PIN and the PUK are blocked, the YubiKey must be reset, which deletes any loaded certificates and returns the YubiKey to a factory default state.&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用情境-1">使用情境&lt;/h3>
&lt;ul>
&lt;li>修改 PUK&lt;/li>
&lt;li>解鎖 PIN&lt;/li>
&lt;/ul>
&lt;h2 id="admin-pin">Admin PIN&lt;/h2>
&lt;p>很明顯這是管理員專用的密碼，反正在需要比較高權限的操作的時候他會跳出來，密碼輸入框上面會寫 &amp;ldquo;Admin PIN&amp;rdquo;，所以應該是不太會看錯啦。預設是 12345678&lt;br>
&lt;code>gpg --edit-card&lt;/code> 在 &lt;code>passwd&lt;/code> 裡修改 Admin PIN 後的訊息會是 &lt;code>PIN changed.&lt;/code>，應該是誤植吧&lt;/p>
&lt;h2 id="management-key">management key&lt;/h2>
&lt;p>這是一個比較特別的密碼，他預設是 3DES，你也可以改成 AES，目前來說 3DES 還是「安全的加密標準」，所以針對這個密碼 yubikey 沒有設定嘗試上限（PIN 和 PUK 有），因為就算攻擊者想要破解也很難（&lt;a class="link" href="https://zh.wikipedia.org/wiki/3DES#%E5%AE%89%E5%85%A8%E6%80%A7" target="_blank" rel="noopener"
>3DES 的安全性&lt;/a>）&lt;/p>
&lt;h3 id="使用情境-2">使用情境&lt;/h3>
&lt;ul>
&lt;li>修改 management key&lt;/li>
&lt;li>修改資料&lt;/li>
&lt;li>產生新金鑰對&lt;/li>
&lt;li>匯入密鑰&lt;/li>
&lt;li>產生憑證&lt;/li>
&lt;li>修改嘗試次數限制&lt;/li>
&lt;/ul>
&lt;p>以上內容是根據 &lt;a class="link" href="https://docs.yubico.com/yesdk/users-manual/application-piv/pin-puk-mgmt-key.html" target="_blank" rel="noopener"
>這篇文件&lt;/a> 整理出來的&lt;/p>
&lt;blockquote>
&lt;p>根據 &lt;a class="link" href="https://developers.yubico.com/yubikey-piv-manager/PIN_and_Management_Key.html" target="_blank" rel="noopener"
>這篇文章&lt;/a>，似乎還有其他密碼們，上面介紹的都是屬於 PIV（Personal Identity Verification），還有 OpenPGP、FIDO2 的 PIN&lt;/p>
&lt;/blockquote></description></item><item><title>Anbox</title><link>https://blog.simbafs.cc/p/anbox/</link><pubDate>Mon, 18 Apr 2022 18:53:50 +0800</pubDate><guid>https://blog.simbafs.cc/p/anbox/</guid><description>&lt;p>&lt;a class="link" href="https://anbox.io/" target="_blank" rel="noopener"
>anbox&lt;/a> 是 Android in a box，是一種基於容器化技術的 Android 模擬器，所以執行速度會比較快、比較省資源，而且因為每個 App 都在各自的容器裡面，所以比較安全
（應該沒理解錯吧？）。&lt;br>
安裝 anbox 需要先安裝兩個 kernal modules，然後安裝 anbox 後，為了之後方便，所以要裝 Google Play，不裝也是可以，但之後安裝其他 App 比較麻煩&lt;/p>
&lt;h1 id="系統">系統&lt;/h1>
&lt;p>我用的系統是 Ubuntu 21.04，如果你的系統不一樣，可能會有某些步驟不太一樣。&lt;br>
這次安裝因為涉及 Linux Kernel 所以隨時重開機有很大機會幫助改善遇到的問題&lt;/p>
&lt;h1 id="安裝-linux-kernal-modules">安裝 Linux Kernal Modules&lt;/h1>
&lt;p>如果你的 Linux kernale &amp;gt; 5.0，那理論上已經包在 Kernel 裡面了，所以不用安裝&lt;/p>
&lt;blockquote>
&lt;p>Starting with Ubuntu 19.04 binder and ashmem are now build with the standard Ubuntu kernel (&amp;gt;= 5.0) and you don’t have to install the modules from the PPA anymore.&lt;/p>
&lt;/blockquote>
&lt;p>但是我還是把命令跑了一次，反正有病治病沒病強身&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo add-apt-repository ppa:morphis/anbox-support
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="c1"># 這個步驟應該會包括在上面那個命令，但執行一次也不會壞&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install linux-headers-generic anbox-modules-dkms &lt;span class="c1"># 這個後面那個套件應該會找不到，跳過他&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install software-properties-common
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo modprobe ashmem_linux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo modprobe binder_linux
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然後如果你還是很擔心不放心有沒有裝好，可以執行下面的指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone https://github.com/anbox/anbox-modules /tmp/anbox-modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /tmp/anbox-modules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ./INSTALL.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這時候如果你&lt;del>還是&lt;/del>很擔心，不確定有沒有裝好，可以用下面的命令檢查有沒有安裝好（這個時候可能需要重開機）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ls -1 /dev/{ashmem,binder} # 這個是官方用的，但是我怎麼試都失敗，但是 anbox 還是安裝成功了
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lsmod | grep -e ashmem -e binder # 我不確定這個找到是不是代表有成功啟動，但是他兩個都找的到
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.anbox.io/userguide/install_kernel_modules.html" target="_blank" rel="noopener"
>https://docs.anbox.io/userguide/install_kernel_modules.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="安裝-anbox">安裝 anbox&lt;/h1>
&lt;p>如果你的電腦上有 snap，就用 snap 裝；如果沒有，就先去裝 snap。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo snap install --devmode --beta anbox
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>嘿對，裝好了，可以用這個指令看看有沒有裝好&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">snap info anbox
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.anbox.io/userguide/install.html" target="_blank" rel="noopener"
>https://docs.anbox.io/userguide/install.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="apt">apt&lt;/h2>
&lt;p>如果你是 Ubuntu/Debian 長期使用者，你可能會想用 apt 裝 anbox，也不是不行，但是等等裝 Google Play 的時候會出一點點問題（OverlayFS 路徑有問題），最佳解決辦法就是用 snap，不要用 apt&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt remove anbox
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="安裝-google-play">安裝 Google Play&lt;/h1>
&lt;p>因為 anbox 沒有內建 apk 安裝器，所以沒辦法很方便的安裝 APP，最方便的方法是安裝 Google Play。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install wget curl lzip tar unzip squashfs-tools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://raw.githubusercontent.com/geeks-r-us/anbox-playstore-installer/master/install-playstore.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x install-playstore.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ./install-playstore.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果遇到 Overlay not enable 的問題，請不要用 apt，至於位什麼自己研究 &lt;code>install-playstores.sh&lt;/code>
跑完如果沒錯誤就可以打開 &lt;code>anbox.appmgr&lt;/code>，打開 play 安裝 APP 了。&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://www.clusterednetworks.com/blog/post/install-google-play-store-anbox" target="_blank" rel="noopener"
>https://www.clusterednetworks.com/blog/post/install-google-play-store-anbox&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="問遺">問遺&lt;/h1>
&lt;p>目前裝好 APP 但是我打不開&lt;/p></description></item><item><title>Ibus Font</title><link>https://blog.simbafs.cc/p/ibus-font/</link><pubDate>Sat, 16 Apr 2022 21:47:25 +0800</pubDate><guid>https://blog.simbafs.cc/p/ibus-font/</guid><description>&lt;p>最近在打字時總覺得中文選字的時候 ibus 字體好小，於是就開始查怎麼弄&lt;/p>
&lt;p>經過搜尋後，找到 &lt;a class="link" href="https://askubuntu.com/questions/1030442/how-to-increase-font-size-of-preview-options-when-using-an-input-method" target="_blank" rel="noopener"
>https://askubuntu.com/questions/1030442/how-to-increase-font-size-of-preview-options-when-using-an-input-method&lt;/a> 這個網頁，總而言之就是先去裝 &lt;a class="link" href="https://extensions.gnome.org/extension/1121/ibus-font-setting/" target="_blank" rel="noopener"
>ibus font setting&lt;/a> 這個外掛，然後就可以用 &lt;code>ibus-setup&lt;/code> 調整了&lt;br>
照做之後的確可以調大小字體，但我不知道是不是因為裝了這個外掛的關係，反正我是成功改好了&lt;/p></description></item><item><title>kdeconnect</title><link>https://blog.simbafs.cc/p/kdeconnect/</link><pubDate>Thu, 07 Apr 2022 23:25:28 +0800</pubDate><guid>https://blog.simbafs.cc/p/kdeconnect/</guid><description>&lt;p>kdeconnect 顧名思義是 kde 出的一款 connect 軟體，功能非常多而且方便。電腦和手機都安裝好軟體後，只要在同一個網域就可以配對連接&lt;/p>
&lt;h1 id="功能介紹">功能介紹&lt;/h1>
&lt;ol>
&lt;li>基本訊息 - 在電腦和手機上可以互相看到電池、網路等基本訊息&lt;/li>
&lt;li>通知 - 可以設定電腦顯示手機通知或手機顯示電腦通知，或是兩者都開啟，我通常只開前者&lt;/li>
&lt;li>媒體控制 - 無論是 VLC、YouTube、Nefflix 或任何網頁，都可以控制進度、音量、暫停，而且雙方都可以控制。這個是我最愛的功能之一&lt;/li>
&lt;li>命令控制 - kdeconnect 可以讓你在手機上執行電腦上預先設定好的指令，像是關機、鎖定等等，下面會推薦幾個我設定的命令&lt;/li>
&lt;li>傳檔案和資料夾共用 - kdeconnect 可以讓你連接電腦和手機上特定的資料夾，或是傳送單一檔案&lt;/li>
&lt;li>共用剪貼簿 - 如其名，這是一個非常實用的功能，但是有時候觸發條件怪怪的&lt;/li>
&lt;li>輸入 - 不論是滑鼠、鍵盤，兩邊都可以互相當對方的輸入裝置，這個功能非常好用
還有像是讓手機大叫（找手機用）、簡報控制、傳簡訊、手機有電話的時候自動暫停音樂等等奇奇怪怪的功能&lt;/li>
&lt;/ol>
&lt;h1 id="推薦命令">推薦命令&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">Description&lt;/th>
&lt;th style="text-align:left">Command&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">鎖定螢幕並暫停 VLC 播放&lt;/td>
&lt;td style="text-align:left">&lt;code>loginctl lock-session; dbus-send --type=method_call --dest=org.mpris.MediaPlayer2.vlc /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">解除鎖定螢幕（免密碼）&lt;/td>
&lt;td style="text-align:left">&lt;code>loginctl unlock-session&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Bluetooth 突然卡住都不動</title><link>https://blog.simbafs.cc/p/bluwtooth-error/</link><pubDate>Wed, 02 Mar 2022 23:31:59 +0800</pubDate><guid>https://blog.simbafs.cc/p/bluwtooth-error/</guid><description>&lt;p>裝了 Ubuntu 20.04 之後不知道為什麼藍芽用一用就會卡住，所有設備都連不上，也關不掉。一開始的解決方式是重開機（這時候關機會跳一個奇怪的錯誤訊息），但是覺得太沒效率了，上網查了一下。&lt;/p>
&lt;h1 id="原因">原因&lt;/h1>
&lt;p>根據 &lt;a class="link" href="https://bugs.launchpad.net/ubuntu/&amp;#43;source/linux/&amp;#43;bug/1859592" target="_blank" rel="noopener"
>這個網頁&lt;/a>，這個似乎是 linux 核心的藍芽驅動有問題（我沒有認真看，但好像是升級到最新的 linux kernel 就可以解決了）。&lt;br>
雖然升級 linux kernel 應該可以一勞永逸解決這個問題，但是這個 bug 其實不常出現，為了他編譯核心有點大題小做，所以我們需要一個簡單的方法解決。&lt;/p>
&lt;h1 id="輕便解法">輕便解法&lt;/h1>
&lt;p>根據 &lt;a class="link" href="https://askubuntu.com/questions/1231074/ubuntu-20-04-bluetooth-not-working" target="_blank" rel="noopener"
>這篇問答&lt;/a>，經過我的測試，第一個答案就可以解決了，當藍芽又掛掉時，執行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo rmmod btusb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo modprobe btusb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣藍芽就回來了。這兩個指令簡單來說就是重新載入藍芽模組，這就是為什麼重開機可以解決（重開機就是重新載入所有模組）&lt;/p></description></item><item><title>Cast Phone Screen to Computer</title><link>https://blog.simbafs.cc/p/cast-phone-screen-to-computer/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/cast-phone-screen-to-computer/</guid><description>&lt;p>有沒有一種經驗是某的應用程式手機板操作勉強算順暢，但是一電腦上就炸開，反應慢到靠北、界面又很難用（沒錯 messenger 我正在看著你）。這個時候相信你會和我一樣想把手機畫面投影到電腦上的一個視窗裡面，最好可以互動、可以打字。有人第一個想法是在手機開 VNC 伺服器，但是這個方法有點麻煩，這篇文章介紹的是目前我覺得最佳解決方案。&lt;/p>
&lt;h1 id="scrcpy">SCRCPY&lt;/h1>
&lt;p>這個軟體支援有線（ USB debug ）、無線（ WIFI ）的連接，還支援螢幕錄影和傳檔案。最重要的是，開在電腦上的視窗可以調整大小，不需要侷限在一個小小的視窗內，你最大可以放大到全螢幕！在某種意義上你獲得了一台和電腦一樣大的手機。&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>安裝流程意外的簡單，只需要用 &lt;code>apt&lt;/code> 就可以安裝了，或是你可以自己 build，稍微看了一下 &lt;a class="link" href="https://github.com/Genymobile/scrcpy/blob/master/BUILD.md" target="_blank" rel="noopener"
>說明&lt;/a> ，看起來不困難，但是既然 &lt;code>apt&lt;/code> 就可以安裝了我們就省一點時間&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ sudo apt install scrcpy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="usb-debug">USB debug&lt;/h2>
&lt;p>首先無論是有線無線都要先打開手機的 &lt;code>USB debug&lt;/code> 選項，在開發人員選項裡面，詳細步驟請看 &lt;a class="link" href="https://developer.android.com/studio/debug/dev-options#enable" target="_blank" rel="noopener"
>官方文件&lt;/a>。&lt;/p>
&lt;h2 id="usb">USB&lt;/h2>
&lt;p>如果不介意有一條線插著~~（順便充電）~~的話，投影畫面非常簡單，只有兩個步驟：&lt;/p>
&lt;ol>
&lt;li>插上 USB 並且無論跳出什麼都按「同意」「OK」&lt;/li>
&lt;li>打開終端機，執行 &lt;code>scrcpy&lt;/code>
然後就會有一個視窗跳出來，你現在就可以在電腦上滑手機了！&lt;/li>
&lt;/ol>
&lt;h2 id="wireless">Wireless&lt;/h2>
&lt;p>無線的話比較麻煩，首先是必須要可以連線，看是在同一個區域網路或是 VPN、ssh tunnel 都可以。再來是因為連線設定頗麻煩，所以我把相關的步驟寫成一個 &lt;a class="link" href="https://gist.github.com/simbafs/9132289f63368ad325d6a2ef62be7a20" target="_blank" rel="noopener"
>script&lt;/a>，下載後給予執行權限就可以執行了（當然要安裝 scrcpy ）。有線的方式一樣很簡單，不用加任何選項就可以連接了。&lt;br>
如果要啟用無線，只需要加上 &lt;code>-w&lt;/code> 選項（用預設的 ip &lt;code>192.168.43.1&lt;/code>)&lt;br>
如果 ip 不是預設的話，可以加上 &lt;code>-i IP&lt;/code> 來指定其他的 ip&lt;br>
加上 &lt;code>-f&lt;/code> 可以開啟全螢幕&lt;/p>
&lt;h1 id="參連連結">參連連結&lt;/h1>
&lt;p>&lt;a class="link" href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener"
>https://github.com/Genymobile/scrcpy&lt;/a>
&lt;a class="link" href="https://developer.android.com/studio/debug/dev-options" target="_blank" rel="noopener"
>https://developer.android.com/studio/debug/dev-options&lt;/a>
&lt;a class="link" href="https://gist.github.com/simbafs/9132289f63368ad325d6a2ef62be7a20" target="_blank" rel="noopener"
>https://gist.github.com/simbafs/9132289f63368ad325d6a2ef62be7a20&lt;/a>&lt;/p></description></item><item><title>firefox touch screen scroll</title><link>https://blog.simbafs.cc/p/firefox-touch-screen-scroll/</link><pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/firefox-touch-screen-scroll/</guid><description>&lt;p>再換了觸控筆電後，在 firefox 一直有個問題：觸控往下滑會被當成選取，要卷動一定要用右邊的 scroll bar&lt;/p>
&lt;h1 id="解決方案">解決方案&lt;/h1>
&lt;p>按照 &lt;a class="link" href="https://askubuntu.com/questions/853910/ubuntu-16-and-touchscreen-scrolling-in-firefox" target="_blank" rel="noopener"
>https://askubuntu.com/questions/853910/ubuntu-16-and-touchscreen-scrolling-in-firefox&lt;/a> 的最佳解法，真的加上 &lt;code>MOZ_USE_XINPUT2=1&lt;/code> 的環境變數就可以了。&lt;br>
另外在設定 &lt;code>~/.local/share/applications/firefox.desktop&lt;/code> 的時候要注意有不只一個 Exec，改完如果沒有生效可以重開機看看。&lt;/p></description></item><item><title>logitech-mouse-permission-error</title><link>https://blog.simbafs.cc/p/logitech-mouse-permission-error/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/logitech-mouse-permission-error/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>我的無線華和滑鼠和鍵盤都是羅技的，在我的 Ubuntu 筆電上一直都沒有問題。有一次我想改我的鍵盤被配置，但是因為 logitech unifying 沒有 Linux 版，所以我另一個軟體叫 solaar，功能是差不多的。
當我裝好軟體以後，鍵盤滑鼠操作都沒問題，只有插上滑鼠的接收器以後都對跳出一個 permission error 的錯誤視窗。雖然在 solaar 裡面就無法看到我的滑鼠就是了，但是完全不影響使用，所以我就擺在那邊放它爛，反正就是多按一個叉叉。&lt;/p>
&lt;h1 id="嘗試自己解">嘗試自己解&lt;/h1>
&lt;p>今天閒閒沒事做剛好來看看這個怎麼解。我一開始想說，把他的 permission 改成和鍵盤一樣就啦！於是我進行了下面的操作&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ls /dev/hidraw*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>拔下鍵盤的接收器，發現他是 &lt;code>/dev/hidraw4&lt;/code> 和 &lt;code>/dev/hidraw5&lt;/code>，再插上去。拔下滑鼠接收器，發現他是 &lt;code>/dev/hidraw2&lt;/code>。&lt;br>
並找到鍵盤的權限是 &lt;code>rw-rw----&lt;/code>，滑鼠是 &lt;code>rw-------&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">660&lt;/span> /dev/hidraw2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>拔下滑鼠接收器，插上。&lt;br>
沒用。&lt;/p>
&lt;p>我猜這個方法會失敗應該是因為他在我改之前就已經先跳錯誤了，等我改完它右沒有偵測，我就得把它拔下來在插上去，我又會看到錯誤訊息&amp;hellip;&amp;hellip; (looping&lt;br>
於是我上網找答案&lt;/p>
&lt;h1 id="網路上的解">網路上的解&lt;/h1>
&lt;p>我 Google &lt;code>ubuntu logitech permission error&lt;/code> 第一個就是我要的！&lt;/p></description></item><item><title>libreoffice-code-format-plugin-install</title><link>https://blog.simbafs.cc/p/libreoffice-code-format-plugin-install/</link><pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/libreoffice-code-format-plugin-install/</guid><description>&lt;h1 id="安裝">安裝&lt;/h1>
&lt;ol>
&lt;li>去 &lt;a class="link" href="https://extensions.libreoffice.org/en/extensions/show/code-highlighter" target="_blank" rel="noopener"
>https://extensions.libreoffice.org/en/extensions/show/code-highlighter&lt;/a> 下載最新的外掛&lt;/li>
&lt;li>把檔名前面的前綴刪掉，&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>例如：&lt;code>ea4db15f_codehighlighter.oxt&lt;/code> -&amp;gt; &lt;code>codehighlighter.oxt&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>安裝相依性套件&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install libreoffice-script-provider-python python3-pip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo pip3 install pygments
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>安裝外掛&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>工具 &amp;gt; 擴充套件管理員 &amp;gt; 加入 &amp;gt; 選擇你的檔案&lt;/p>
&lt;/blockquote>
&lt;h1 id="使用">使用&lt;/h1>
&lt;ol>
&lt;li>插入文字方塊&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>插入 &amp;gt; 文字方塊&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>貼上程式碼&lt;/li>
&lt;li>選擇文字方塊，不是文字（按文字方塊的邊邊）&lt;/li>
&lt;li>format&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>工具 &amp;gt; highlight code &amp;gt; 選得語言、style&lt;/p>
&lt;/blockquote>
&lt;h1 id="參考資料">參考資料&lt;/h1>
&lt;p>&lt;a class="link" href="https://extensions.libreoffice.org/en/extensions/show/code-highlighter" target="_blank" rel="noopener"
>Libreoffice extensions&lt;/a>
&lt;a class="link" href="https://github.com/slgobinath/libreoffice-code-highlighter/issues/29#issuecomment-635216707" target="_blank" rel="noopener"
>issue&lt;/a>&lt;/p></description></item><item><title>mxlinux boot with systemd</title><link>https://blog.simbafs.cc/p/mxlinux-boot-with-systemd/</link><pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/mxlinux-boot-with-systemd/</guid><description>&lt;h1 id="問題">問題&lt;/h1>
&lt;p>在 mxlinux 裡面，預設的 init 不是 systmed，這導致如果想用 systemctl 的時候就會跳出錯誤說&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">System has not been booted with systemd as init system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>像是在安裝 &lt;code>mongodb-org&lt;/code> 的時候他就要用到 &lt;code>systemctl&lt;/code> 然後就會出錯。&lt;/p>
&lt;h1 id="解法">解法&lt;/h1>
&lt;p>其實 mxlinux 已經幫我們想好解法了，在開機選項時選 &lt;code>Advence&lt;/code> &amp;gt; &lt;code>Systemd&lt;/code> 就會以 systemd 開機&lt;/p></description></item><item><title>mxlinux-change-workspace</title><link>https://blog.simbafs.cc/p/mxlinux-change-workspace/</link><pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/mxlinux-change-workspace/</guid><description>&lt;h1 id="切換工作區">切換工作區&lt;/h1>
&lt;p>今天想要在 mxlinux 中快速的切換工作區
我看到可以用滑鼠滾輪切換
可是我想要的是鍵盤快捷鍵
上網查了一下
發現可以透過 &lt;code>Ctrl&lt;/code>+&lt;code>Alt&lt;/code>+&lt;code>up/down/home/end&lt;/code> 來切換&lt;/p>
&lt;h1 id="參考資料">參考資料&lt;/h1>
&lt;p>&lt;a class="link" href="https://unix.stackexchange.com/questions/270334/how-to-move-a-window-to-another-workspace-in-xfce" target="_blank" rel="noopener"
>https://unix.stackexchange.com/questions/270334/how-to-move-a-window-to-another-workspace-in-xfce&lt;/a>&lt;/p></description></item><item><title>gpg</title><link>https://blog.simbafs.cc/p/gpg/</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/gpg/</guid><description>&lt;h1 id="sign-git-commit-with-gpg">sign git commit with gpg&lt;/h1>
&lt;p>我按照他的作法弄完後就是沒辦法 commit
他說 GPG 無法簽章
後來我發現是我的 name 填錯（應該啦，我猜的）
總而言之就重新產生 GPG key 就好了
name 和 git 設定的一樣&lt;/p>
&lt;h1 id="常見指令">常見指令&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ gpg --full-gen-key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ gpg --list-secret-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ gpg --armor --export &amp;lt;secret key&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="刪除金鑰">刪除金鑰&lt;/h1>
&lt;p>在刪除的時候分成兩步驟，刪除私鑰、刪除公鑰。在刪除之前要先知道要刪除的金鑰的 ID&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gpg --list-keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到那串很長的文字，那就是 ID，複製起來，他起來也許會像這樣&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">JFDKSA8FEWHE29HFVC92UHFPA93WOHFVDOPA39U2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再來用兩個指令就可以刪除了，注意一定要先刪私鑰。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">gpg --delete-secret-key &amp;lt;ID&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg --delete-key &amp;lt;ID&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>isolate</title><link>https://blog.simbafs.cc/p/isolate/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/isolate/</guid><description>&lt;p>我有一個放了很久的計畫，就是自己寫一個 OJ，因為我覺得現在的那個太難用了。
我很快的建立 repo 但是卻完全沒有進展，我寫了一個 shell script 幫忙編譯執行程式之後我就在也沒有動過他了
我沒有繼續動工的原因是我不知道如何隔離使用者提交的程式碼
我想過 docker 可是據說還是不安全
還有 chroot 但是我不知道有沒有比 docker 安全而且設定好麻煩&lt;/p>
&lt;p>昨天去考 TOI　入營考（當然沒進）的時候，我終於看到大名鼎鼎的 CMS 了！
出來之後我發現他是用一個叫 isolate 的程式來做沙箱測試
而且這好像是 IOI 自己寫的，應該是蠻安全的（吧？）
今天成功編譯過後把心得寫下來&lt;/p></description></item><item><title>youtube-dl</title><link>https://blog.simbafs.cc/p/youtube-dl/</link><pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/youtube-dl/</guid><description>&lt;p>最近在下載 youtube 音樂，每次下載都要把檔案重新改名，很麻煩。所以就想要寫一個 shell script 來幫我解決。
首先改名字我相信 youtube-dl 一定有提供這個選項，於是開始查文件。
看到 &lt;code>-o&lt;/code> ，接下來講遇到的坑&lt;/p>
&lt;h2 id="-o-坑">&lt;code>-o&lt;/code> 坑&lt;/h2>
&lt;p>&lt;code>-o&lt;/code> 後面接的是一個 template string ，不是檔名，而且就算指定副檔名是 .mp3 了還是要寫成 &lt;code>%(ext)s&lt;/code>&lt;/p></description></item><item><title>ssh-tunnel</title><link>https://blog.simbafs.cc/p/ssh-tunnel/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/ssh-tunnel/</guid><description>&lt;p>昨天架好了 reverse ssh 讓我可以連回學校 server
今天來研究 ssh tunnel&lt;/p>
&lt;h1 id="簡介">簡介&lt;/h1>
&lt;p>ssh tunnel 分正反向
其實他們的差別只有在方向不一樣
連語法參數都一樣&lt;/p>
&lt;h1 id="正向-tunnel">正向 tunnel&lt;/h1>
&lt;p>正向的 tunnel 參數是 -L
語法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh -L [bind_address:]port:host:hostport
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -L [bind_address:]port:remote_socket
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -L local_socket:host:hostport
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -L local_socket:remote_socket
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="反向-tunnel">反向 tunnel&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh -R [bind_address:]port:host:hostport
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -R [bind_address:]port:local_socket
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -R remote_socket:host:hostport
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -R remote_socket:local_socket
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh -R [bind_address:]port
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="心得">心得&lt;/h1>
&lt;p>看起來好像很難
但是其實用下面這個就夠了
正向：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh -L &amp;lt;local port&amp;gt;:localhost:&amp;lt;remote port&amp;gt; &amp;lt;user&amp;gt;@&amp;lt;remote&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>反向;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh -R &amp;lt;remote port&amp;gt;:localhost:&amp;lt;local port&amp;gt; &amp;lt;user&amp;gt;@&amp;lt;remote&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>總而言之就是前面的和選項一樣
如果是 -L 那前面就是 local port
如果是 -R 那前面就是 remote port&lt;/p>
&lt;h1 id="參考連結">參考連結&lt;/h1>
&lt;p>&lt;a class="link" href="https://johnliu55.tw/ssh-tunnel.html" target="_blank" rel="noopener"
>https://johnliu55.tw/ssh-tunnel.html&lt;/a>&lt;/p></description></item><item><title>reverse-ssh</title><link>https://blog.simbafs.cc/p/reverse-ssh/</link><pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/reverse-ssh/</guid><description>&lt;p>一直以來連線回社辦的電腦都要走 webtty 再開 tmate
但是今天發現了一個新的方法可以透過反向的 ssh 連回社辦&lt;/p>
&lt;h2 id="reverse-ssh">reverse ssh&lt;/h2>
&lt;p>在社辦電腦&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ ssh -NfR 2222:localhost:22 simba@simba-vps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這可以建立一個連線
這時候到 simba-vps&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ ssh server@localhost -p 2222
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就可以連線回社辦伺服器了&lt;/p>
&lt;h2 id="autossh">autossh&lt;/h2>
&lt;p>但是這樣做 ssh 連線有可能會超時然後斷掉
這時候可以透過 autossh 來幫我們自動建立連線
在社辦電腦&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ apt install autossh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ autossh -Mf 2222 -NR 1111:localhost:22 simba@simba-vps -p 22
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣就可以在 vps 上&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ ssh server@localhost -p 1111
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>來連回社辦啦！
最後可以把這堆在 vps 上再做一次就可以在 internet 連回社辦伺服器了&lt;/p>
&lt;h2 id="參考網址">參考網址&lt;/h2>
&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/15983795/how-do-i-establish-a-bidirectional-ssh-tunnel" target="_blank" rel="noopener"
>https://stackoverflow.com/questions/15983795/how-do-i-establish-a-bidirectional-ssh-tunnel&lt;/a>&lt;br>
&lt;a class="link" href="https://ez3c.tw/2043" target="_blank" rel="noopener"
>https://ez3c.tw/2043&lt;/a>&lt;br>
&lt;a class="link" href="https://www.ubuntu-tw.org/modules/newbb/viewtopic.php?viewmode=compact&amp;amp;topic_id=17538&amp;amp;forum=7" target="_blank" rel="noopener"
>https://www.ubuntu-tw.org/modules/newbb/viewtopic.php?viewmode=compact&amp;topic_id=17538&amp;forum=7&lt;/a>&lt;br>
&lt;a class="link" href="http://blog.adahsu.net/2007/11/ssh-reverse-tunnel.html" target="_blank" rel="noopener"
>http://blog.adahsu.net/2007/11/ssh-reverse-tunnel.html&lt;/a>&lt;br>
&lt;a class="link" href="https://codertw.com/%E4%BC%BA%E6%9C%8D%E5%99%A8/377688/" target="_blank" rel="noopener"
>https://codertw.com/%E4%BC%BA%E6%9C%8D%E5%99%A8/377688/&lt;/a>&lt;br>
這篇講 ssh tunnel 最清楚&lt;br>
&lt;a class="link" href="https://yu-jack.github.io/2019/01/08/ssh-tunnel/" target="_blank" rel="noopener"
>https://yu-jack.github.io/2019/01/08/ssh-tunnel/&lt;/a>&lt;/p></description></item></channel></rss>