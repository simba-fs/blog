{
    "@context": [
        "https://www.w3.org/ns/activitystreams"
    ],
    "to": ["https://www.w3.org/ns/activitystreams#Public"],
    "name": "OCR Add PDF Text Layer",
    "type": "Article","content": "\u003ch1 id=\"ocr-add-pdf-text-layer\"\u003eOCR Add PDF Text Layer\u003c/h1\u003e\n\u003cp\u003e眾所周知大學課本又厚又重，而且還不便宜，所以這時候如果有電子書就可以很大程度解決這個問題。但是有時候拿到的電子書是掃描的圖片（來源就\u0026hellip;\u0026hellip;咳咳），不能複製、按右鍵翻譯。這時候就可以出動光學字元辨識，幫我們把圖片轉成文字，而且順便把字放在 PDF 的文字圖層上，這樣就可以看著掃描的書，又可以選取到原本不能選取的文字。\u003c/p\u003e\n\u003ch2 id=\"tesseract\"\u003etesseract\u003c/h2\u003e\n\u003cp\u003e我之前試過幾個線上 OCR，但都是付費功能，但這個東西不是什麼前沿技術，理論上應該不需要太強的電腦效能，於是我就想試著自己跑在我的電腦上。我首先找到的是 \u003ca class=\"link\" href=\"https://github.com/tesseract-ocr/tesseract\"  target=\"_blank\" rel=\"noopener\"\n    \u003ehttps://github.com/tesseract-ocr/tesseract\u003c/a\u003e ，按照他的說明，這套是 1985 年由 HP 開發，之後開源、Google 接手繼續開發的軟體（有夠古老）、支援超過 100 種語言。既然是大公司開發，又過了這麼久（而且看起來上星期還有 commit，就算有 bug 應該也找得到人修），想必應該很不錯。這個透過 \u003ccode\u003eapt\u003c/code\u003e 就可以安裝了\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install tesseract-ocr\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo apt install libtesseract-dev\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e不過當我直接把 pdf 丟進去的時候他好像不能直接吃 PDF\u003c/p\u003e\n\u003ch2 id=\"ocrmypdf\"\u003eOCRmyPDF\u003c/h2\u003e\n\u003cp\u003e接著我在搜尋關鍵字加上 \u003ccode\u003epdf\u003c/code\u003e，第一個看起來就是一個很棒的 repo \u003ca class=\"link\" href=\"https://github.com/ocrmypdf/OCRmyPDF\"  target=\"_blank\" rel=\"noopener\"\n    \u003ehttps://github.com/ocrmypdf/OCRmyPDF\u003c/a\u003e ，有 8.9k 個星星，他號稱可以把 PDF 丟進 OCR 後把結果再塞進 text layer 裡，完美符合需求，而且他是基於 tesseract 這個看起來也超級棒的軟體。這個安裝也是用 \u003ccode\u003eapt\u003c/code\u003e 就可以了\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eapt install ocrmypdf\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e安裝好後給來源路徑、輸出路徑，然後等一會就好了，我用我的力學課本第 12 章做測試，44 頁的文字 46 秒完成，打開後內容幾乎沒錯，超棒！\u003c/p\u003e\n\u003cp\u003e等等就把整本課本都丟進去 \u0026gt;\u0026lt;\u003c/p\u003e\n","mediaType": "text/html",
    "published": "2023-05-19T00:00:00+00:00",
    "updated": "2023-05-19T00:00:00+00:00",
    "id": "https://blog.simbafs.cc/p/linux/ocr-add-pdf-layer/",
    "url": "https://blog.simbafs.cc/p/linux/ocr-add-pdf-layer/",
    "attributedTo": "https://blog.simbafs.cc"
}