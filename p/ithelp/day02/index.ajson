{
    "@context": [
        "https://www.w3.org/ns/activitystreams"
    ],
    "to": ["https://www.w3.org/ns/activitystreams#Public"],
    "name": "Day 02 ：zsh 與 shell script",
    "type": "Article","content": "\u003cblockquote\u003e\n\u003cp\u003e今天內容不小心寫太長了 \u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e首先，在介紹其他軟體之前，先來看看與 CLI 操作習習相關的「shell」，我選擇的 shell 是 \u003ccode\u003ezsh\u003c/code\u003e，\u003ccode\u003ezsh\u003c/code\u003e 在 \u003ccode\u003ebash\u003c/code\u003e 的基礎上擴充了很多實用的功能，像是支援更好的\u003cstrong\u003e自動補全\u003c/strong\u003e，\u003cstrong\u003e各式各樣的主題\u003c/strong\u003e等等。\u003c/p\u003e\n\u003ch1 id=\"zsh\"\u003ezsh\u003c/h1\u003e\n\u003ch2 id=\"安裝\"\u003e安裝\u003c/h2\u003e\n\u003cp\u003e如果你的作業系統是 \u003cstrong\u003edebian 系列\u003c/strong\u003e的話，可以直接用 \u003cstrong\u003eapt\u003c/strong\u003e 安裝 \u003ccode\u003eapt install zsh\u003c/code\u003e。其他的 linux 發行版可以到 \u003ca class=\"link\" href=\"https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH\"  target=\"_blank\" rel=\"noopener\"\n    \u003e這個網頁\u003c/a\u003e找找你的發行版\u003cbr\u003e\n如果是 \u003cstrong\u003emac\u003c/strong\u003e，理論上你的 shell 應該\u003cstrong\u003e已經是 zsh 了\u003c/strong\u003e（ mac 的 shell 從 2019 開始\u003cstrong\u003e預設是 zsh\u003c/strong\u003e ），如果不是的話你可以用 \u003cstrong\u003ehomebrew\u003c/strong\u003e 安裝 \u003ccode\u003ebrew install zsh\u003c/code\u003e。\u003cbr\u003e\n如果是 windows 的話，建議你開啟 \u003cstrong\u003eWSL2\u003c/strong\u003e 或是找一台有 linux/mac 的電腦\u003c/p\u003e\n\u003cp\u003e現在我們可以透過這個指令檢查是否安裝成功\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ezsh --version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e如果沒有錯誤就是安裝成功了\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e❓ \u0026gt; 現在用的是什麼 shell？\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e你可以使用 \u003ccode\u003eecho $SHELL\u003c/code\u003e 來看你現在使用的 shell 是那一個\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"更換-shell\"\u003e更換 shell\u003c/h2\u003e\n\u003cp\u003e如果你之前的 shell \u003cstrong\u003e不是 zsh\u003c/strong\u003e 那就要更換預設 shell，用以下指令可以\u003cstrong\u003e更換\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003echsh -s $(which zsh)\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e或是\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003echsh -s $(where zsh)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"初次使用-zsh\"\u003e初次使用 zsh\u003c/h2\u003e\n\u003cp\u003e更換完 shell，\u003cstrong\u003e重新開啟終端機\u003c/strong\u003e，你應該會看到類似下面的畫面，我們選擇預設的 \u003cstrong\u003e(0)\u003c/strong\u003e 選項就可以了。如果沒有出現這個畫面的話就是預設的 shell \u003cstrong\u003e沒有切換成功\u003c/strong\u003e或是之前你***已經用過** zsh 了。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003e\u003cimg src=\"/images/ithelp/pure-CLI-IDE/day02/zsh-install.png\"\n\t\n\t\n\t\n\tloading=\"lazy\"\n\t\n\t\talt=\"zsh-install\"\n\t\n\t\n\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003ezsh 安裝畫面\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch1 id=\"zplug\"\u003ezplug\u003c/h1\u003e\n\u003cp\u003e裝好 zsh 後，你會發現他和 bash 或是你原本的 shell 沒什麼差別，甚至更難用，那是因為我們\u003cstrong\u003e還沒設定\u003c/strong\u003e。zplug 是一個 zsh 的\u003cstrong\u003e套件管理器\u003c/strong\u003e，所有的設定都寫在 \u003ccode\u003e.zshrc\u003c/code\u003e 裡，因此如果以後要換電腦，只需要\u003cstrong\u003e搬走 \u003ccode\u003e.zshrc\u003c/code\u003e 一個檔案\u003c/strong\u003e，zplug 就會幫你把所有外掛裝起來。\u003c/p\u003e\n\u003ch2 id=\"安裝-zplug\"\u003e安裝 zplug\u003c/h2\u003e\n\u003cp\u003e官方建議的安裝方式是使用 installer，執行以下指令\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e如果出現 \u003ccode\u003eEnjoy zplug!\u003c/code\u003e 就是安裝完成了，如果沒有的話可能是\u003cstrong\u003e版本不對\u003c/strong\u003e，他會告訴你有什麼沒裝\u003c/p\u003e\n\u003ch2 id=\"zshrc\"\u003ezshrc\u003c/h2\u003e\n\u003cp\u003e現在我們要來設定 \u003ccode\u003e~/.zshrc\u003c/code\u003e 了，這是 zsh 的設定檔，他其實就是一個 shell script，但是每次\u003cstrong\u003e啟動 zsh 他會先被執行\u003c/strong\u003e。\u003cbr\u003e\n首先隨便用一個編輯器打開 \u003ccode\u003e~/.zshrc\u003c/code\u003e，刪掉裡面所有內容（應改只有一行註解），貼上以下內容\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esource ~/.zplug/init.zsh\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e# plugins\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eif ! zplug check --verbose; then\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tprintf \u0026#34;Install? [y/N]: \u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tif read -q; then\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\techo; zplug install\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\tfi\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efi\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ezplug load\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e第一行是\u003cstrong\u003e啟動\u003c/strong\u003e zplug\n第五行開始是\u003cstrong\u003e檢查是否要更新/安裝套件\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e重新開啟終端機\u003c/strong\u003e，這樣環境才會載入\u003c/p\u003e\n\u003ch1 id=\"基本-shell-sript\"\u003e基本 shell sript\u003c/h1\u003e\n\u003cp\u003e接下來，我們先來認識一下 shell script，這個東西不僅可以讓你操作更加順暢，也可以幫你實現各種\u003cstrong\u003e自動化操作\u003c/strong\u003e。\u003c/p\u003e\n\u003ch2 id=\"命令\"\u003e命令\u003c/h2\u003e\n\u003cp\u003e一個普通的 shell 通常是以\u003cstrong\u003e一個命令開頭\u003c/strong\u003e，例如 \u003ccode\u003els\u003c/code\u003e、\u003ccode\u003ecd\u003c/code\u003e、\u003ccode\u003emv\u003c/code\u003e，這個命令代表的是\u003cstrong\u003e電腦中一個可執行檔\u003c/strong\u003e，你可以用 \u003ccode\u003ewhich \u0026lt;cmd\u0026gt;\u003c/code\u003e 或 \u003ccode\u003ewhere \u0026lt;cmd\u0026gt;\u003c/code\u003e 來看執行檔的路徑。在這個命令後面的東西都是\u003cstrong\u003e參數\u003c/strong\u003e，和一般程式不一樣的是，這個參數因為是整個字串交給命令處理，所以通常可以\u003cstrong\u003e不管順序\u003c/strong\u003e，，例如 \u003ccode\u003els -a -l\u003c/code\u003e 和 \u003ccode\u003els -l -a\u003c/code\u003e 是一樣的（當然會有例外或是處理的不好的情況，但不多），更棒的是大部分成熟的指令都可以讓這種只有一個字元的「短選項」合起來寫，變成這樣 \u003ccode\u003els -al\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"pipe\"\u003ePipe\u003c/h2\u003e\n\u003cp\u003e一個複雜的指令不太可能只憑幾個短短的選項運作，例如 \u003ccode\u003egrep\u003c/code\u003e（搜尋特定字串用的命令） 除了可以在選項指定檔名，也可以過「特殊的方式」傳一串字給他，這個方法就是我們熟悉的 \u003cstrong\u003estdin\u003c/strong\u003e，也就是 \u003ccode\u003escanf\u003c/code\u003e、\u003ccode\u003ecin\u003c/code\u003e 這類函數接受輸入的來源。\u003cbr\u003e\n接受 stdin 的方式有兩個，一個是使用者自己打，另一個是接受另一個命令的「輸出」。要接受另一個「輸出」的方式叫做 \u003cstrong\u003epipe\u003c/strong\u003e，顧名思義就是「管線」，他可以把 A 指令的輸出接給 B 指令的輸入。例如以下的命令\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ps -ax \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep zsh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e先用 \u003ccode\u003eps\u003c/code\u003e 指令列出所有的 process，再交給 \u003ccode\u003egrep\u003c/code\u003e 找出含有字串 \u003ccode\u003ezsh\u003c/code\u003e 的行。\u003c/p\u003e\n\u003ch2 id=\"redirect\"\u003eRedirect\u003c/h2\u003e\n\u003cp\u003e剛剛講了把輸出轉到另一個命令的輸入，那如果是要寫進檔案裡面呢？是不是個命令叫 \u003ccode\u003ewrite\u003c/code\u003e？其實 shell 已經有個東西可以寫檔案了，就是 \u003cstrong\u003eredirect\u003c/strong\u003e，直接來看範例\u003c/p\u003e\n\u003ch3 id=\"寫檔\"\u003e寫檔\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ls \u0026gt; ls_output.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e就這麼簡單，用大於符號 \u003ccode\u003e\u0026gt;\u003c/code\u003e 就可以把\u003cstrong\u003e標準輸出\u003c/strong\u003e（ stdout ）丟到檔案裡面，但是要注意的是這樣寫的話是直接**「覆蓋」\u003cstrong\u003e，有就是說如果原本 \u003ccode\u003els_output.txt\u003c/code\u003e 有內容，會直接被 \u003ccode\u003els\u003c/code\u003e 指令的輸入覆蓋，如果你想保留，可以用 \u003ccode\u003e\u0026gt;\u0026gt;\u003c/code\u003e 來\u003c/strong\u003e「附加」**，這會讓他接在檔案最後面\u003c/p\u003e\n\u003ch3 id=\"讀檔\"\u003e讀檔\u003c/h3\u003e\n\u003cp\u003e如果某個指令沒有讀檔案的選項，只接受 stdin，那你也可以用 \u003cstrong\u003eredirect\u003c/strong\u003e 將檔案讀進這個命令\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ wc \u0026lt; .zshrc\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e\u003ccode\u003ewc\u003c/code\u003e 這個指令會\u003cstrong\u003e計算\u003c/strong\u003e輸入的行數/字數/字元數，上面的指令先把 \u003ccode\u003e.zshrc\u003c/code\u003e 讀出來，再交給 \u003ccode\u003ewc\u003c/code\u003e 計算字數\u003c/p\u003e\n\u003cp\u003e關於其他 pipe 和 redirect 的用法可以參考 \u003ca class=\"link\" href=\"https://blog.gtwang.org/linux/linux-io-input-output-redirection-operators/\"  target=\"_blank\" rel=\"noopener\"\n    \u003e這篇文章\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e嗯\u0026hellip;我知道這有點蠢，因為你可以直接在 \u003ccode\u003ewc\u003c/code\u003e 後面接路徑，這裡只是示範一下\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"環境變數\"\u003e環境變數\u003c/h2\u003e\n\u003cp\u003e改變命令行為的方式除了選項外，還有\u003cstrong\u003e環境變數\u003c/strong\u003e。環境變數就像 C++ 裡的**「全域變數」\u003cstrong\u003e，不管是哪個命令（函數）都可以\u003c/strong\u003e讀、寫**。通常環境變數的功能是\u003cstrong\u003e設定某個選項\u003c/strong\u003e，好讓每一次執行時\u003cstrong\u003e不用加一堆選項\u003c/strong\u003e（當然這個功能要命令有支援才行），或是儲存某個\u003cstrong\u003e命令的資訊\u003c/strong\u003e，像是 \u003ccode\u003e$SHELL\u003c/code\u003e 紀錄著你現在使用的 shell。\u003c/p\u003e\n\u003ch3 id=\"讀取\"\u003e讀取\u003c/h3\u003e\n\u003cp\u003e讀取環境變數很簡單，只需要加上錢號 \u003ccode\u003e$\u003c/code\u003e 就可以了，例如 \u003ccode\u003e$PATH\u003c/code\u003e（通常環境變數會\u003cstrong\u003e全大寫\u003c/strong\u003e，但其實沒有什麼規範）， shell 會在讀到這個的時候用他的值去替代這個字串。例如以下範例\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003els \u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e$HOME 的值是你的家目錄路徑，shell 解釋出來的命令就會是 \u003ccode\u003els /home/username\u003c/code\u003e\u003cbr\u003e\n如果你想要\u003cstrong\u003e看這個環境變數的值\u003c/strong\u003e，可以根據上面的原理，用 \u003ccode\u003eecho\u003c/code\u003e 命令印輸出來\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$HOME\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"寫入\"\u003e寫入\u003c/h3\u003e\n\u003cp\u003e寫入環境變數只有一個要點——不要加空白，用 \u003ccode\u003e=\u003c/code\u003e 指定環境變數時\u003cstrong\u003e千萬不要\u003c/strong\u003e在 \u003ccode\u003e=\u003c/code\u003e 左右加上空白，看範例\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-zsh\" data-lang=\"zsh\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a string\u0026#39;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# O\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eB\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;a string\u0026#39;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# X\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eC\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;a string\u0026#39;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# X\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eD\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;a string\u0026#39;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# X\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e其實 shell script 中的錢號 \u003ccode\u003e$\u003c/code\u003e 還有超多用法，可以參考 \u003ca class=\"link\" href=\"https://stackoverflow.com/questions/5163144/what-are-the-special-dollar-sign-shell-variables\"  target=\"_blank\" rel=\"noopener\"\n    \u003e這裡\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"結尾\"\u003e結尾\u003c/h1\u003e\n\u003cp\u003e今天介紹了 zsh 和外掛管理器 zplug 還有一點點的 shell script，明天開始會用 zplug 裝各種外掛來豐富我們的純‧ CLI 整合式開發環境\u003c/p\u003e\n","mediaType": "text/html",
    "published": "2021-09-02T00:00:00+00:00",
    "updated": "2021-09-02T00:00:00+00:00",
    "id": "https://blog.simbafs.cc/p/ithelp/day02/",
    "url": "https://blog.simbafs.cc/p/ithelp/day02/",
    "attributedTo": "https://blog.simbafs.cc"
}