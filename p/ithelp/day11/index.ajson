{
    "@context": [
        "https://www.w3.org/ns/activitystreams"
    ],
    "to": ["https://www.w3.org/ns/activitystreams#Public"],
    "name": "Day 11：批次修改！！",
    "type": "Article","content": "\u003cp\u003e昨天體驗了一些快捷鍵和命令，今天要講的是在 vim 中也很常用的\u003cstrong\u003e搜尋與取代\u003c/strong\u003e\u003c/p\u003e\n\u003ch1 id=\"搜尋與取代\"\u003e搜尋與取代\u003c/h1\u003e\n\u003cp\u003evim 的搜尋與取代是由命令 \u003ccode\u003es\u003c/code\u003e 達成的，命令格式長這樣\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e:[範圍修飾字]s/abcd/efgh/[旗標]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003e其中 \u003ccode\u003eabcd\u003c/code\u003e 是 \u003ca class=\"link\" href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Regular_Expressions\"  target=\"_blank\" rel=\"noopener\"\n    \u003e正規表達式\u003c/a\u003e（regular expression，縮寫 regex，在中國常寫成「正則」），regex 除了在 vim 可以用之外，幾乎所有程式語言都可以用，還有 \u003ccode\u003egrep\u003c/code\u003e、\u003ccode\u003esed\u003c/code\u003e 等 linux 指令也都是使用 regex，關於 regex 的用法在這裡就不多提了，\u003ca class=\"link\" href=\"https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Regular_Expressions\"  target=\"_blank\" rel=\"noopener\"\n    \u003eMDN\u003c/a\u003e 上有很完整的解釋\u003cbr\u003e\n你應該有注意到上面的命令格式裡面除了正規表達式之外還有「範圍修飾字」和「旗標」，這就是接下來這段的重點啦！\u003c/p\u003e\n\u003ch2 id=\"範圍修飾字\"\u003e範圍修飾字\u003c/h2\u003e\n\u003cp\u003e這個東西也不只是搜尋與取代可以用，只要你覺得需要\u003cstrong\u003e限制某個指令的作用範圍\u003c/strong\u003e都可以用樣的邏輯接下去\u003cbr\u003e\n範圍修飾\u003cstrong\u003e可寫可不寫\u003c/strong\u003e，如果不寫的話搜尋與取代就只會\u003cstrong\u003e在游標在的那一行起作用\u003c/strong\u003e，加上百分比符號 \u003ccode\u003e%\u003c/code\u003e 代表作用範圍是\u003cstrong\u003e整份文件\u003c/strong\u003e，也可以\u003cstrong\u003e加上行號\u003c/strong\u003e代表只作用在某一行，如果是兩個行號中間以\u003cstrong\u003e逗號\u003c/strong\u003e隔開，代表是作用在這兩個行號之間\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003e\u003cimg src=\"/images/ithelp/pure-CLI-IDE/day11/vim-replace.gif\"\n\t\n\t\n\t\n\tloading=\"lazy\"\n\t\n\t\talt=\"vim replace\"\n\t\n\t\n\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e範圍修飾字範例\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"範圍選取\"\u003e範圍選取\u003c/h3\u003e\n\u003cp\u003e剛剛的範例中有出現用行號作範圍選取，其實範圍選取還有一個\u003cstrong\u003e更簡單\u003c/strong\u003e的方式 ——「選取模式」。選取模式和編輯模式、命令模式是同等地位的東西，進入選取模式的快捷鍵有下列幾個（一樣要進到命令模式才能進選取模式）\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e快捷鍵\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e說明\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ev\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e一般選取，以「字」為單位\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eS-v(大寫 v )\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e一般選取，以「行」為單位\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eC-v\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e垂直選取，這個比較不常用，但是需要的時候蠻好用的\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e選取後一樣可以打指令和快捷鍵，但是這些就只會作用在選取的範圍內，常常搭配的有 \u003ccode\u003ed\u003c/code\u003e（剪下）、\u003ccode\u003ey\u003c/code\u003e（複製）、\u003ccode\u003e:s\u003c/code\u003e（搜尋與取代）\u003cbr\u003e\n再把一個範圍選取起來後，如果是快捷鍵就直接按，如果是命令的話按下冒號 \u003ccode\u003e:\u003c/code\u003e，平常只有冒號的命令行會先出現 \u003ccode\u003e:'\u0026lt;,'\u0026gt;\u003c/code\u003e，這串東東代表的就是\u003cstrong\u003e這一個範圍的範圍修飾字\u003c/strong\u003e，不用刪掉，直打指令就可以了\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003e\u003cimg src=\"/../img/day11/vim-selsect.gif\"\n\t\n\t\n\t\n\tloading=\"lazy\"\n\t\n\t\talt=\"vim select\"\n\t\n\t\n\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e選取結合指令與快捷鍵\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"旗標\"\u003e旗標\u003c/h2\u003e\n\u003cp\u003e旗標這個東西主要是在控制搜尋的行為，例如\u003cstrong\u003e全部取代\u003c/strong\u003e、\u003cstrong\u003e取代前先問一下\u003c/strong\u003e之類的，多個旗標可以組合，\u003cstrong\u003e不管順序\u003c/strong\u003e，下面是幾個可能會用到的旗標\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e旗標\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e說明\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eg\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e整行搜尋，如果不加的話只會取代第一個\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ec\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e在取代前先確認\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003ei\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e忽略大小寫\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003e\u003cimg src=\"/../img/day11/vim-replace-flag.gif\"\n\t\n\t\n\t\n\tloading=\"lazy\"\n\t\n\t\talt=\"vim replace flag\"\n\t\n\t\n\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003e旗標範例\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch1 id=\"結尾\"\u003e結尾\u003c/h1\u003e\n\u003cp\u003e這兩天講的大部份是操作性質的東西，\u003cstrong\u003e不需要一次全部記起來\u003c/strong\u003e，用的多了自然會記得，現在只需要\u003cstrong\u003e先有個印象就可以了\u003c/strong\u003e。其實 vim 很多操作、快捷鍵都很直覺，不妨自己多試試看加了 \u003c!-- raw HTML omitted --\u003eShift\u003c!-- raw HTML omitted --\u003e、\u003c!-- raw HTML omitted --\u003eCTRL\u003c!-- raw HTML omitted --\u003e 之後原本的快捷鍵會有什麼變化\u003cbr\u003e\nvim 的操作還有很多技巧，如果有興趣不妨去看看 vim 的文件（用命令 \u003ccode\u003e:help\u003c/code\u003e ）中相關章節（大概是 usr_03~04 左右）的介紹，你會對 vim 有非常全面的認識。雖然文件是英文寫的，但是並沒有太難的單字，大概國中程度就可以看了\u003c/p\u003e\n","mediaType": "text/html",
    "published": "2021-09-11T00:00:00+00:00",
    "updated": "2021-09-11T00:00:00+00:00",
    "id": "https://blog.simbafs.cc/p/ithelp/day11/",
    "url": "https://blog.simbafs.cc/p/ithelp/day11/",
    "attributedTo": "https://blog.simbafs.cc"
}