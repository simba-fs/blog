<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bash on Simba 的喵窩</title><link>https://blog.simbafs.cc/tags/bash/</link><description>Recent content in bash on Simba 的喵窩</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.simbafs.cc/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Bash Snippet</title><link>https://blog.simbafs.cc/p/linux/bash/snippet/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/bash/snippet/</guid><description>&lt;img src="https://blog.simbafs.cc/og/linux/bash/snippet.png" alt="Featured image of post Bash Snippet" />&lt;h1 id="bash-snippet">Bash Snippet&lt;/h1>
&lt;h2 id="clear-broken-symlinks">Clear broken symlinks&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> $ find . -type l ! -exec test -e {} \; -exec sudo rm {} \;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://unix.stackexchange.com/questions/34248/how-can-i-find-broken-symlinks" target="_blank" rel="noopener"
>stackoverflow&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="random-string">Random String&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ cat /dev/random | head | md5sum | head -c 32
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>bash number loop</title><link>https://blog.simbafs.cc/p/linux/bash/bash-number-loop/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/bash/bash-number-loop/</guid><description>&lt;img src="https://blog.simbafs.cc/og/linux/bash/bash-number-loop.png" alt="Featured image of post bash number loop" />&lt;h1 id="bash-number-loop">Bash Number Loop&lt;/h1>
&lt;p>今天在某的地方剛好看到一個 bash 的小技巧，當我們要從 1 數到 100 時，通常會用 &lt;code>seq&lt;/code> 指令來做，但是如果我們的需求剛剛好是每次遞增（遞減）1 的話，就可以使用 &lt;code>{start..end}&lt;/code> 縮寫，下面兩個範例的效果是一樣的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># for 迴圈 + seq 的寫法&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> i in &lt;span class="k">$(&lt;/span>seq &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> 100&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 用 {start..end}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="o">{&lt;/span>1..100&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這個技巧也可以用在建立檔案，像這樣：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">touch user&lt;span class="o">{&lt;/span>1..100&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>bash completion</title><link>https://blog.simbafs.cc/p/linux/bash/bash-completion/</link><pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/bash/bash-completion/</guid><description>&lt;img src="https://blog.simbafs.cc/og/linux/bash/bash-completion.png" alt="Featured image of post bash completion" />&lt;h1 id="bash-completion">Bash Completion&lt;/h1>
&lt;h2 id="需求">需求&lt;/h2>
&lt;p>今天寫了一個 bash script 幫我管理 mongodb docker，在使用的時候一些子命令，像是 &lt;code>up&lt;/code>、&lt;code>down&lt;/code>、&lt;code>clean&lt;/code>。我希望可以讓 bash 當我自動補齊這些選項。&lt;/p>
&lt;h2 id="bash_completion">&lt;code>bash_completion&lt;/code>&lt;/h2>
&lt;p>&lt;code>bash_completion&lt;/code> 是一個可以幫我們做程式化補齊的工具，像是 git 就有使用到這個工具，在 commit、push 的時候按 tab 都會顯示出當下我們可以用的東西，像是 &lt;code>git push&amp;lt;tab&amp;gt;&amp;lt;tab&amp;gt;&lt;/code> 就會自動補齊 &lt;code>origin&lt;/code> 而不是給我們看檔案（bash 預設只會補齊檔案和命令）。我們這次只須要用基本的 &lt;code>complete&lt;/code> 就可以了&lt;/p>
&lt;h2 id="complete">&lt;code>complete&lt;/code>&lt;/h2>
&lt;p>&lt;code>complete&lt;/code> 可以幫命令加上簡單的自動完成，其實 &lt;code>bash_completion&lt;/code> 也是去呼叫這個命令來達成自動補齊。&lt;code>complete&lt;/code> 傻用非常簡單，像下面這樣就可以幫 &lt;code>mongodb&lt;/code> 這個命令加上自動補齊&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">complete&lt;/span> -W &lt;span class="s2">&amp;#34;up down clean&amp;#34;&lt;/span> mongodb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>-W&lt;/code> 選項代表後面是字詞列表，用 &lt;code>-F&lt;/code> 後面可以接一個函數，但是這個我沒研究，也許下一個專案就是研究 &lt;code>complete&lt;/code> 也說不定。&lt;/p></description></item><item><title>文章更新時間錯亂問題</title><link>https://blog.simbafs.cc/p/hexo/%E6%96%87%E7%AB%A0%E6%9B%B4%E6%96%B0%E6%99%82%E9%96%93%E9%8C%AF%E4%BA%82%E5%95%8F%E9%A1%8C/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/hexo/%E6%96%87%E7%AB%A0%E6%9B%B4%E6%96%B0%E6%99%82%E9%96%93%E9%8C%AF%E4%BA%82%E5%95%8F%E9%A1%8C/</guid><description>&lt;img src="https://blog.simbafs.cc/og/hexo/%E6%96%87%E7%AB%A0%E6%9B%B4%E6%96%B0%E6%99%82%E9%96%93%E9%8C%AF%E4%BA%82%E5%95%8F%E9%A1%8C.png" alt="Featured image of post 文章更新時間錯亂問題" />&lt;h1 id="問題">問題&lt;/h1>
&lt;p>在設定完 GitHub Action 之後，我發現我的文章的更新時間都錯了，會全部變成當天日期。但是本地生成的就沒有這個問題，經過一番盤查和猜測後，我發現問題是因為 git 不會把 modified date 紀錄，因為每台電腦的時區都是不一樣的，紀錄起來沒有意義。但是我們需要這項 meta data，所以我們就要自己想法紀錄&lt;/p>
&lt;h1 id="解法-v10">解法 v1.0&lt;/h1>
&lt;p>首先，因為每一篇文章 hexo 都會紀錄建立時間，所以我們可以直接把他抓出來，然後把檔案的更新時間設成這個時間就可以啦！&lt;/p>
&lt;h2 id="更改檔案的-modified-time">更改檔案的 modified time&lt;/h2>
&lt;p>這個功能只要用我們最熟悉的 &lt;code>touch&lt;/code> 就可以做到了。一般我們使用 &lt;code>touch&lt;/code> 的時候會把 modified time 改成當下時間，那要改任意時間只要加上 &lt;code>-t&lt;/code> 選項就可以啦&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-t STAMP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> use [[CC]YY]MMDDhhmm[.ss] instead of current time
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>假設我們有個檔案 &lt;code>tmp&lt;/code> ，我想把他的日期改成 &lt;code>1999/3/23 12:32:33&lt;/code> ，那我可以這樣下指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ted timeouch -t&amp;#39;19993231232.33&amp;#39; tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="抓出檔名日期">抓出檔名、日期&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># git create time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">grep -rnw source/_posts -e &lt;span class="s1">&amp;#39;date&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>output:（這裡的 &lt;code>date:&lt;/code> 後面我多加了一個空白，原因後面會說）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">source/_posts/hexo-installation.md:3:date: 2020-02-10 17:26:45
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/blessed.md:3:date: 2020-02-17 23:24:10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/bash.md:3:date: 2020-02-16 22:15:10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/hexo-cli-extras.md:3:date: 2020-02-11 21:26:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/remind-daniel.md:3:date: 2020-03-15 21:35:25
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/jquery.md:3:date: 2020-03-15 11:38:47
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/nginx-reverse-proxy-setup.md:3:date: 2020-02-13 10:34:58
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/nginx-ui.md:3:date: 2020-06-23 22:50:29
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/reverse-ssh.md:3:date: 2020-02-23 21:24:34
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/webpack-react.md:3:date: 2020-06-28 22:39:57
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/mxlinux-change-workspace.md:3:date: 2020-05-08 17:59:22
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="分離時間檔名">分離時間，檔名&lt;/h2>
&lt;p>觀察他的輸出&lt;br>
檔名的部份是在以冒號分隔的第一欄&lt;br>
日期/時間是在以空格分隔的第二、三欄
那我們就可以根據這個把他們分離出來&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># get name, time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">grep -rnw source/_posts -e &lt;span class="s1">&amp;#39;date&amp;#39;&lt;/span> &amp;gt; t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cut -d: -f1 t &amp;gt; name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cut -d&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> -f2,3 t &amp;gt; &lt;span class="nb">time&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>output:（節錄，這邊沒有對的很好）
name:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">source/_posts/sqlite.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/ssh-tunnel.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/unix-socket.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/webpack-react.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/youtube-dl.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source/_posts/加入-google-search-和-sitemap.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>time:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2020-02-24 22:14:36
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-02-23 14:30:22
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-06-28 22:39:57
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-03-04 22:48:20
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-08-19 22:37:52
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-08-20 23:33:13
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="處理日期的格式">處理日期的格式&lt;/h2>
&lt;p>在 &lt;code>更改檔案的 modified time&lt;/code> 提到的日期格式和我們抓出來的不太一樣，所以我們需要做一些處理&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cut -d&amp;#39; &amp;#39; -f2,3 t | sed &amp;#39;s/[- ]//g&amp;#39; | sed &amp;#39;s/://&amp;#39; | sed &amp;#39;s/:/./&amp;#39; &amp;gt; time
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>這樣就可以成功轉換日期格式了&lt;/p>
&lt;h2 id="時間檔">時間檔&lt;/h2>
&lt;p>接下來把 &lt;code>name&lt;/code>、&lt;code>time&lt;/code> 合起來就變成時間擋了，這裡有一點要注意，因為我們恢復的時候是用 for 迴圈，換行和空白都會被當成切斷符號，所以檔名和時間中間的間隔符號我們選用冒號 &lt;code>:&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">paste -d: name time &amp;gt; source/_posts/time
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="清垃圾">清垃圾&lt;/h2>
&lt;p>最後記得把剛才產生出來但是用不到的檔案清掉&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">rm t name time
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="完整程式碼">完整程式碼&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># updateDate.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> -z &lt;span class="nv">$1&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;source/_posts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">grep &lt;span class="s1">&amp;#39;date: [0-9]{4}&amp;#39;&lt;/span> &lt;span class="nv">$dir&lt;/span>/*.md &amp;gt; t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cut -d: -f1 t &amp;gt; name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cut -d&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> -f2,3 t &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/[- ]//g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/://&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/:/./&amp;#39;&lt;/span> &amp;gt; &lt;span class="nb">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">paste -d: name &lt;span class="nb">time&lt;/span> &amp;gt; &lt;span class="nv">$dir&lt;/span>/time
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> i in &lt;span class="k">$(&lt;/span>cat &lt;span class="nv">$dir&lt;/span>/time&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="p">|&lt;/span> cut -d: -f1&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="p">|&lt;/span> cut -d: -f2&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> touch -t&lt;span class="nv">$d&lt;/span> &lt;span class="nv">$n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm t name &lt;span class="nb">time&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="備註">備註&lt;/h2>
&lt;p>剛剛有說到在這份教學中的 &lt;code>date: &lt;/code> 都多加一個空白，原因是因為 grep 在抓時候不會只抓第一個，為了避免抓到錯的所以我故意讓他不匹配，不然再生成時間檔的時候會出錯，所以你們的文章中如果出現會匹配 &lt;code>date: [0-9]{4}&lt;/code> 的字串，記得要做一下手腳&lt;/p>
&lt;h1 id="解法-v20">解法 v2.0&lt;/h1>
&lt;p>上一個作法雖然可行，但是有一個缺點，就是他的更新時間都會是建立時間，不會是 modified time，所以解法二誕生了&lt;br>
其實很簡單，改上面的一小行就好了。首先用 &lt;code>stat&lt;/code> 取出檔案的 modified time&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stat -c %y source/_posts/*.md &amp;gt; &lt;span class="nb">time&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2020-03-04 22:48:20.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-08-19 22:37:52.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-08-21 22:15:44.366513358 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2020-07-04 10:17:39.000000000 +0800
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然後在經過適當的轉換變成我們要的格式就完成啦！&lt;/p>
&lt;h2 id="完整程式碼-1">完整程式碼&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># storePostTime.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> -z &lt;span class="nv">$1&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">dir&lt;/span>&lt;span class="o">=&lt;/span>source/_posts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ls &lt;span class="nv">$dir&lt;/span>/*.md &amp;gt; name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stat -c %y &lt;span class="nv">$dir&lt;/span>/*.md &lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> cut -d&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> -f1,2 &lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> sed &lt;span class="s1">&amp;#39;s/[- ]//g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> sed &lt;span class="s1">&amp;#39;s/://&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> sed &lt;span class="s1">&amp;#39;s/:/./&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>&lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> cut -d. -f1,2 &amp;gt; &lt;span class="nb">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">paste -d: name &lt;span class="nb">time&lt;/span> &amp;gt; t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv t &lt;span class="nv">$dir&lt;/span>/time
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm name &lt;span class="nb">time&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># recorverDate.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> -z &lt;span class="nv">$1&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;source/_posts/time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> i in &lt;span class="k">$(&lt;/span>cat &lt;span class="nv">$file&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="p">|&lt;/span> cut -d: -f1&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">d&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="p">|&lt;/span> cut -d: -f2&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> touch -t&lt;span class="nv">$d&lt;/span> &lt;span class="nv">$n&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>youtube-dl</title><link>https://blog.simbafs.cc/p/linux/youtube-dl/</link><pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/youtube-dl/</guid><description>&lt;img src="https://blog.simbafs.cc/og/linux/youtube-dl.png" alt="Featured image of post youtube-dl" />&lt;h1 id="youtube-dl">Youtube DL&lt;/h1>
&lt;p>最近在下載 youtube 音樂，每次下載都要把檔案重新改名，很麻煩。所以就想要寫一個 shell script 來幫我解決。
首先改名字我相信 youtube-dl 一定有提供這個選項，於是開始查文件。
看到 &lt;code>-o&lt;/code> ，接下來講遇到的坑&lt;/p>
&lt;h2 id="-o-坑">&lt;code>-o&lt;/code> 坑&lt;/h2>
&lt;p>&lt;code>-o&lt;/code> 後面接的是一個 template string ，不是檔名，而且就算指定副檔名是 .mp3 了還是要寫成 &lt;code>%(ext)s&lt;/code>&lt;/p></description></item><item><title>Server Tool</title><link>https://blog.simbafs.cc/p/linux/server/server-tool/</link><pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/server/server-tool/</guid><description>&lt;img src="https://blog.simbafs.cc/og/linux/server/server-tool.png" alt="Featured image of post Server Tool" />&lt;h1 id="server-tool">Server Tool&lt;/h1>
&lt;h2 id="用-bash-寫-log-分析工具">用 bash 寫 log 分析工具&lt;/h2>
&lt;p>因為我們的 server 不知道是為什麼一直受到 DDoS 攻擊&lt;br>
我想知道是什麼時段容易受到攻擊和每次多久、來自那個 ip&lt;br>
於是我花了一點時間寫了幾個簡單的 script&lt;/p>
&lt;hr>
&lt;h3 id="先來講我遇到的坑好了">先來講我遇到的坑好了&lt;/h3>
&lt;h4 id="sh">sh&lt;/h4>
&lt;p>過程中遇到一個最大的坑是在 ubuntu 預設的 sh 不是 bash
是 dash
據說比較情輕薄&lt;br>
我在試 bash 中數字的運算比較時踩到這個坑&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">((&lt;/span> a &amp;gt; b &lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> yes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因為我在試語法是否正確
開了一個新的檔案
我懶的 &lt;code>chmod&lt;/code> 直接 &lt;code>sh tt.sh&lt;/code>
結果 &lt;code>sh&lt;/code> 是 dash
dash 沒有支援這個語法
然後抓了快 20 分鐘的 bug
還是乖乖寫 &lt;code>#!/bin/bash&lt;/code> 吧&lt;/p>
&lt;h4 id="floating-point-number">floating point number&lt;/h4>
&lt;p>我的 script 中有用浮點數的除法
但是 bash 只支援整數
所以除出來都是 0
這個坑沒有很大
很容易解決
只要使用 &lt;code>bc&lt;/code> 這個指令就可以了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ bc -l &lt;span class="o">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span class="s1">&amp;#39;100/3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">33.33333333333333333333
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="associate-array">Associate array&lt;/h4>
&lt;p>在有一個地方本來要用關聯式陣列來存一些資料
在定義關聯是陣列要把 &lt;code>-a&lt;/code> 改成 &lt;code>-A&lt;/code>
這邊遇到什麼問題有點忘記了
想到再補起來
反正最後沒有用關聯式陣列&lt;/p>
&lt;hr>
&lt;h3 id="其他">其他&lt;/h3>
&lt;h4 id="程式碼">程式碼&lt;/h4>
&lt;p>&lt;a class="link" href="https://github.com/simba-fs/server-tool" target="_blank" rel="noopener"
>https://github.com/simba-fs/server-tool&lt;/a>
介紹：&lt;/p>
&lt;h4 id="barsh">bar.sh&lt;/h4>
&lt;p>Draw a bar from data&lt;/p>
&lt;h4 id="countsh">count.sh&lt;/h4>
&lt;p>Count how many times does each line appear in file&lt;/p>
&lt;h4 id="ipsh">ip.sh&lt;/h4>
&lt;p>Count how many times does each ip send a request&lt;/p>
&lt;h4 id="timesh">time.sh&lt;/h4>
&lt;p>Count how many request in each secend/minute/hour/day&lt;/p>
&lt;h4 id="好站連結">好站連結&lt;/h4>
&lt;p>&lt;a class="link" href="https://www.regextester.com/" target="_blank" rel="noopener"
>https://www.regextester.com/&lt;/a>
這個網站可以測試 RegEx
蠻不錯的&lt;/p></description></item><item><title>ddos</title><link>https://blog.simbafs.cc/p/linux/server/ddos/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.simbafs.cc/p/linux/server/ddos/</guid><description>&lt;img src="https://blog.simbafs.cc/og/linux/server/ddos.png" alt="Featured image of post ddos" />&lt;h1 id="ddos">DDOS&lt;/h1>
&lt;h2 id="伺服器被-ddos-惹">伺服器被 DDoS 惹&lt;/h2>
&lt;p>今天早上把社團的 reverse proxy server 換成 nginx&lt;br>
下午心血來潮看看 log 檔
因為沒有寫好的工具&lt;br>
首先把 log 檔 cp 到我的電腦再來處理&lt;/p>
&lt;hr>
&lt;p>先寫了一個 script 來計算重複的行數&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># count.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">declare&lt;/span> -A cnt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="nb">read&lt;/span> id extre
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">let&lt;/span> cnt&lt;span class="o">[&lt;/span>&lt;span class="nv">$id&lt;/span>&lt;span class="o">]&lt;/span>++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> id in &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!cnt[@]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$id&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">cnt&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">$id&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>再來用 &lt;code>awk&lt;/code> 把 &lt;code>status code&lt;/code> 是 404 的 ip 挑出來
然後丟給 &lt;code>count.sh&lt;/code> 計算每個 ip 有幾個 404
最後再存到 &lt;code>404-ip.txt&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">awk &lt;span class="s1">&amp;#39;$9 == 404 {print $1}&amp;#39;&lt;/span> access.log &lt;span class="p">|&lt;/span> ./count.sh &amp;gt; 404-ip.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>再來用 &lt;code>sort&lt;/code> 來排序剛剛的 &lt;code>404-ip.txt&lt;/code>，存到 &lt;code>404-ip-sorted.txt&lt;/code>
&lt;code>sort&lt;/code> 加上 &lt;code>-n&lt;/code> 選項讓他以數字順數排序，預設是以 ascii 順序排序
&lt;code>-r&lt;/code> 讓他由大到小
&lt;code>-k2&lt;/code> 指定以第二欄排序，預設以空白分開，可以用 &lt;code>-t&lt;/code> 改變分隔符號&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sort -n 404-ip.txt -k2 -r &amp;gt; 404-ip-sorted.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>這時候來看看 &lt;code>404-ip-sorted.txt&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ head 404-ip-sorted.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">91.199.118.175 1329180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">91.199.118.212 259477
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">163.172.12.108 145050
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">195.154.161.234 142920
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">195.154.102.22 142450
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">195.154.102.191 137800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">163.172.12.148 132650
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">62.210.220.48 129248
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">195.154.102.159 11353
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">62.210.85.48 11206
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>哇賽！第一名的 ip 送了一百三十多萬個請求&lt;br>
這份 log 檔是在早上十點多才開始紀錄的&lt;br>
平均每秒 41 個請求
這麼多鐵定是 ddos
我們來看看完整的檔案看看有多少人在 DDoS 我們的 server
嗯，總共十九個破千的&lt;br>
這些通通有問題（其實應該以平均請求數來看，但太複雜了所以以後再補
接下來就接把這幾個 ip ban 掉&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo su
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> /etc/nginx/sites-enabled/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vi banned-ip.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>將 ip 貼到文件裡面
在一般模式下執行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[esc] :%s/^/deny /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[esc] :%s/&amp;amp;/;/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> ../sites-enabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ln -s ../sites-available
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>$ nginx -t&lt;/code> 確認設定檔沒問題
&lt;code>$ systemctl restart nginx&lt;/code> 來重啟伺服器
然後就大公告成了～～
明天再來看看有沒有問題&lt;/p></description></item></channel></rss>